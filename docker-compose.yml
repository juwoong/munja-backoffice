services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: backoffice
    ports:
      - "7432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d backoffice"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backoffice-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - backend/.env.docker
    environment:
      NODE_ENV: production
    command: >-
      sh -c "(pnpm --filter backend run prisma:migrate || pnpm --filter backend run prisma:push) && pnpm --filter backend run start"
    ports:
      - "4000:4000"
    restart: unless-stopped
    networks:
      - backoffice-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        VITE_API_URL: http://localhost:4000
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:80"
    restart: unless-stopped
    networks:
      - backoffice-network

volumes:
  db-data:
    driver: local

networks:
  backoffice-network:
    driver: bridge
